{"version":3,"sources":["reducers/userReducer.js","reducers/messageReducer.js","reducers/participantReducer.js","reducers/notificationReducer.js","store.js","components/UsersOnlineLabel.js","components/RoomIdLabel.js","utils/methods.js","services/messages.js","components/LeaveRoomButton.js","components/MessageInput.js","hooks/index.js","components/UsersTypingLabel.js","components/Message.js","components/MessageList.js","components/ChatDisplay.js","components/TextInput.js","components/JoinRoomForm.js","components/StartScreen.js","components/Notification.js","App.js","index.js"],"names":["initialState","username","roomId","typing","setTyping","isTyping","type","userReducer","state","action","createMessage","content","message","id","shortid","generate","messageReducer","concat","participantReducer","participants","map","p","data","participant","filter","timeoutID","notificationReducer","clearTimeout","appReducer","combineReducers","user","messages","notification","store","createStore","undefined","composeWithDevTools","applyMiddleware","thunk","UsersOnlineLabel","useSelector","className","style","color","join","RoomIdLabel","onClick","str","textareaElement","document","createElement","position","left","value","body","appendChild","select","execCommand","removeChild","copyToClipBoard","window","location","host","socket","socketIOClient","displayError","time_ms","dispatch","setTimeout","setNotification","isOtherClient","getState","on","addParticipant","removeParticipant","setParticipantTyping","setUsername","setRoomId","toParticipant","LeaveRoomButton","useDispatch","handleLeaving","a","emit","MessageInput","initialValue","useState","setValue","onChange","target","reset","parseForInput","useField","timeoutId","setTimeoutId","useEffect","onSubmit","ev","preventDefault","trim","placeholder","required","onKeyDown","key","UsersTypingLabel","usernames","text","length","Message","contents","i","MessageList","result","currentUsername","len","push","currentMessage","combineMessages","ChatDisplay","history","useHistory","messagesEnd","setMessagesEnd","scrollIntoView","ref","el","TextInput","prependText","JoinRoomForm","roomIdFromURI","useParams","submitButtonData","msg","disabled","buttonType","to","StartScreen","Button","variant","size","Notification","App","path","component","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.29be7ad2.chunk.js","sourcesContent":["const initialState = {\r\n  username: '',\r\n  roomId: '',\r\n  typing: false\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_USERNAME':\r\n      return { ...state, username: action.username };\r\n\r\n    case 'SET_ROOM_ID':\r\n      return { ...state, roomId: action.roomId };\r\n\r\n    case 'SET_TYPING':\r\n      return { ...state, typing: action.typing };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setUsername = username => {\r\n  return {\r\n    type: 'SET_USERNAME',\r\n    username\r\n  };\r\n};\r\n\r\nexport const setRoomId = roomId => {\r\n  return {\r\n    type: 'SET_ROOM_ID',\r\n    roomId\r\n  };\r\n};\r\n\r\nexport const setTyping = isTyping => {\r\n  return {\r\n    type: 'SET_TYPING',\r\n    typing: isTyping\r\n  };\r\n};\r\n\r\nexport default userReducer;","import shortid from 'shortid';\r\n\r\nconst messageReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_MESSAGE':\r\n      return state.concat(action.message);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createMessage = (content, username) => {\r\n  return {\r\n    type: 'ADD_MESSAGE',\r\n    message: {\r\n      content, username,\r\n      id: shortid.generate()\r\n    }\r\n  };\r\n};\r\n\r\nexport default messageReducer;","const participantReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'INIT_PARTICIPANTS':\r\n      return action.participants;\r\n\r\n    case 'SET_PARTICIPANT_TYPING':\r\n      return state.map(p =>\r\n        p.username !== action.data.username \r\n          ? p \r\n          : { ...p, typing: action.data.typing }\r\n      );\r\n\r\n    case 'ADD_PARTICIPANT':\r\n      return state.concat(action.participant);\r\n\r\n    case 'REMOVE_PARTICIPANT':\r\n      return state.filter(p => p.username !== action.username);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializeParticipants = usernames => {\r\n  const toParticipant = username => {\r\n    return {\r\n      username,\r\n      typing: false\r\n    };\r\n  };\r\n\r\n  return {\r\n    type: 'INIT_PARTICIPANTS',\r\n    participants: usernames.map(username =>\r\n      toParticipant(username)\r\n    )\r\n  };\r\n};\r\n\r\nexport const setParticipantTyping = (username, typing) => {\r\n  return {\r\n    type: 'SET_PARTICIPANT_TYPING',\r\n    data: {\r\n      username, typing\r\n    }\r\n  };\r\n};\r\n\r\nexport const addParticipant = username => {\r\n  return {\r\n    type: 'ADD_PARTICIPANT',\r\n    participant: {\r\n      username,\r\n      typing: false\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeParticipant = username => {\r\n  return {\r\n    type: 'REMOVE_PARTICIPANT',\r\n    username\r\n  };\r\n};\r\n\r\nexport default participantReducer;","const initialState = {\r\n  message: '',\r\n  timeoutID: ''\r\n};\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_NOTIFICATION':\r\n      if (state.timeoutID) {\r\n        clearTimeout(state.timeoutID);\r\n      }\r\n\r\n      return {\r\n        message: action.data.message,\r\n        timeoutID: action.data.timeoutID\r\n      }\r\n\r\n    case 'CLEAR_NOTIFICATION':\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setNotification = (message, time_ms = 3000) => {\r\n  return dispatch => {\r\n    const timeoutID = setTimeout(() => {\r\n      dispatch({ type: 'CLEAR_NOTIFICATION' });\r\n    }, time_ms);\r\n\r\n    dispatch({\r\n      type: 'SET_NOTIFICATION',\r\n      data: {\r\n        message,\r\n        timeoutID\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport default notificationReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './reducers/userReducer';\r\nimport messageReducer from './reducers/messageReducer';\r\nimport participantReducer from './reducers/participantReducer';\r\nimport notificationReducer from './reducers/notificationReducer';\r\n\r\nconst appReducer = combineReducers({\r\n  user: userReducer,\r\n  messages: messageReducer,\r\n  participants: participantReducer,\r\n  notification: notificationReducer\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'RESET_REDUX_STORE') {\r\n    state = undefined;\r\n  }\r\n\r\n  return appReducer(state, action);\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst UsersOnlineLabel = () => {\r\n  const participants = useSelector(state => state.participants).map(p => p.username);\r\n\r\n  return (\r\n    <div className='border-bottom'>\r\n      <span style={{ color: 'blue'}}>Online: </span>\r\n      { participants.join(', ')}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersOnlineLabel;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { copyToClipBoard } from '../utils/methods';\r\n\r\nconst RoomIdLabel = () => {\r\n  const roomId = useSelector(state => state.user.roomId);\r\n\r\n  const copyLinkToClipBoard = () => {\r\n    const link = `${window.location.host}/join/${roomId}`;\r\n    copyToClipBoard(link);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\">Room ID</span>\r\n      </div>\r\n      <div className=\"input-group-append\">\r\n        <span className=\"input-group-text bg-white\">{ roomId }</span>\r\n        <button className=\"btn btn-outline-primary\" type=\"button\" onClick={copyLinkToClipBoard}>Copy link</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomIdLabel;","export const copyToClipBoard = str => {\r\n  const textareaElement = document.createElement('textarea');\r\n  \r\n  // Hide textarea\r\n  textareaElement.style.position = 'absolute';\r\n  textareaElement.style.left = '-9999px';\r\n\r\n  // Copy to clipboard\r\n  textareaElement.value = str;\r\n  document.body.appendChild(textareaElement);\r\n  textareaElement.select();\r\n  document.execCommand('copy');\r\n\r\n  document.body.removeChild(textareaElement);\r\n};","import socketIOClient from 'socket.io-client';\r\nimport store from '../store';\r\nimport { createMessage } from '../reducers/messageReducer';\r\nimport { setUsername, setRoomId } from '../reducers/userReducer';\r\nimport { initializeParticipants, addParticipant, removeParticipant, setParticipantTyping } from '../reducers/participantReducer';\r\nimport { setNotification } from '../reducers/notificationReducer';\r\nconst baseUrl = '/';\r\n\r\nconst socket = socketIOClient(baseUrl);\r\n\r\nconst displayError = (message, time_ms) => {\r\n  store.dispatch( setNotification(message, time_ms) );\r\n};\r\n\r\nconst isOtherClient = username => {\r\n  const myUsername = store.getState().user.username;\r\n  return myUsername !== username;\r\n};\r\n\r\nsocket.on('ROOM_MESSAGE', ({ username, content }) => {\r\n  if (isOtherClient(username)) {\r\n    store.dispatch( createMessage(content, username) );\r\n  }\r\n});\r\n\r\nsocket.on('USER_CONNECTED_TO_ROOM', ({ username }) => {\r\n  store.dispatch( addParticipant(username) );\r\n  store.dispatch( createMessage(`${username} connected`) );\r\n});\r\n\r\nsocket.on('USER_DISCONNECTED_FROM_ROOM', ({ username }) => {\r\n  store.dispatch( removeParticipant(username) );\r\n  store.dispatch( createMessage(`${username} disconnected`) );\r\n});\r\n\r\nsocket.on('USER_TYPING', ({ username, typing }) => {\r\n  if (isOtherClient(username)) {\r\n    store.dispatch( setParticipantTyping(username, typing) );\r\n  }\r\n});\r\n\r\nsocket.on('ERROR_MESSAGE', message => {\r\n  displayError(message);\r\n});\r\n\r\nsocket.on('connect_error', () => {\r\n  displayError('Server is down', 10000);\r\n});\r\n\r\nsocket.on('JOINED_ROOM', body => {\r\n  const { username, roomId, participants } = body.data;\r\n\r\n  store.dispatch( setUsername(username) );\r\n  store.dispatch( setRoomId(roomId) );\r\n  store.dispatch( initializeParticipants(participants) );\r\n});\r\n\r\nexport default socket;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport socket from '../services/messages';\r\n\r\nconst LeaveRoomButton = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLeaving = async () => {\r\n    socket.emit('LEAVE_ROOM');\r\n    dispatch({ type: 'RESET_REDUX_STORE'})\r\n  };\r\n\r\n  return (\r\n    <span id='leave-room-button' onClick={handleLeaving}>\r\n      Leave room\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default LeaveRoomButton;","import React, { useState, useEffect } from 'react';\r\nimport { useField } from '../hooks';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createMessage } from '../reducers/messageReducer';\r\nimport { setTyping } from '../reducers/userReducer';\r\nimport socket from '../services/messages';\r\n\r\nconst MessageInput = () => {\r\n  const dispatch = useDispatch();\r\n  const message = useField('text');\r\n  const user = useSelector(state => state.user);\r\n  const [timeoutId, setTimeoutId] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Suoritetaan kun user.typing arvo muuttuu\r\n    socket.emit('SET_TYPING', {\r\n      typing: user.typing\r\n    });\r\n  }, [user.typing]);\r\n\r\n  const handleSubmit = ev => {\r\n    ev.preventDefault();\r\n    if (!message.value.trim()) return;\r\n\r\n    dispatch( setTyping(false) );\r\n    dispatch( createMessage(message.value, user.username) );\r\n    socket.emit('SEND_MESSAGE', message.value);\r\n    message.reset();\r\n  };\r\n\r\n  const handleTyping = ({ key }) => {\r\n    if (key === 'Enter') return;\r\n\r\n    dispatch( setTyping(true) );\r\n\r\n    const id = setTimeout(() => {\r\n      dispatch( setTyping(false) );\r\n    }, 1000);\r\n\r\n    clearTimeout(timeoutId);\r\n    setTimeoutId(id);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"input-group mt-2\">\r\n        <input\r\n          className=\"form-control\"\r\n          placeholder={`@${user.username}`}\r\n          {...message.parseForInput()}\r\n          required\r\n          onKeyDown={handleTyping}\r\n        />\r\n        <div className=\"input-group-append\">\r\n          <button className=\"btn btn-primary\" type=\"submit\">Send</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageInput;","import { useState } from 'react';\r\n\r\nexport const useField = (type, initialValue) => {\r\n  const [value, setValue] = useState(initialValue || '');\r\n\r\n  const onChange = ({ target }) => {\r\n    setValue(target.value);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValue('');\r\n  };\r\n\r\n  const parseForInput = () => {\r\n    return {\r\n      type,\r\n      value,\r\n      onChange\r\n    };\r\n  };\r\n\r\n  return {\r\n    type, \r\n    value,\r\n    reset,\r\n    parseForInput\r\n  };\r\n};","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst UsersTypingLabel = () => {\r\n  const typingUsers = useSelector(state =>\r\n    state.participants\r\n  ).filter(p => p.typing);\r\n  const usernames = typingUsers.map(p => p.username);\r\n\r\n  let text = '';\r\n  if (usernames.length === 1) {\r\n    text = `${usernames[0]} is typing...`;\r\n  } else if (usernames.length === 2) {\r\n    text = `${usernames[0]} and ${usernames[1]} are typing...`;\r\n  } else if (usernames.length > 2){\r\n    text = `${usernames[0]} and ${usernames.length - 1} others are typing...`;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span id='typing-label'>{ text }</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersTypingLabel;","import React from 'react';\r\n\r\nconst Message = ({ username, contents }) => {\r\n  const rows = () => contents.map((content, i) => \r\n    <span className='d-block' key={i}>{ content }</span>\r\n  );\r\n\r\n  return (\r\n    <div className={`pt-3 text-left`}>\r\n      <p className=\"pb-3 mb-0 border-bottom border-gray\">\r\n        { username &&\r\n          <strong className=\"d-block text-gray-dark\">\r\n            { username }\r\n          </strong>\r\n        }\r\n        { rows() }\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nimport Message from './Message';\r\n\r\nconst MessageList = ({ messages }) => {\r\n  const combineMessages = () => {\r\n    /*\r\n      * Yhdistää viestit, jotka ovat tulleet\r\n      * peräkkäin samalta käyttäjältä\r\n      \r\n      * ENNEN\r\n      * -----\r\n      * @Atte\r\n      * Hei tämä on viesti 1\r\n      * @Atte\r\n      * Tämä on viesti 2\r\n      * @Uolevi\r\n      * Tämä on viesti 3\r\n      * @Atte\r\n      * Tämä on viesti 4\r\n      \r\n      * JÄLKEEN\r\n      * -------\r\n      * @Atte\r\n      * Hei tämä on viesti 1\r\n      * Hei tämä on viesti 2\r\n      * @Uolevi\r\n      * Tämä on viesti 3\r\n      * @Atte\r\n      * Tämä on viesti 4\r\n    */\r\n    let result = [];\r\n\r\n    if (!messages.length)  {\r\n      return result;\r\n    }\r\n\r\n    let currentUsername = messages[0].username;\r\n    let contents = [ messages[0].content ];\r\n\r\n    const len = messages.length;\r\n    for (let i = 1; i <= len; i++) {\r\n      if (i === len) {\r\n        result.push({\r\n          username: currentUsername,\r\n          contents,\r\n          id: messages[len - 1].id\r\n        });\r\n\r\n        break;\r\n      }\r\n\r\n      const currentMessage = messages[i];\r\n\r\n      if (currentMessage.username === currentUsername) {\r\n        contents.push(currentMessage.content);\r\n        continue;\r\n      }\r\n\r\n      result.push({\r\n        username: currentUsername,\r\n        contents,\r\n        id: messages[i - 1].id\r\n      });\r\n\r\n      currentUsername = currentMessage.username;\r\n      contents = [ currentMessage.content ];\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  const messageRows = () => combineMessages().map(message => \r\n    <Message username={message.username} contents={message.contents} key={message.id} />\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      { messageRows() }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageList;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport UsersOnlineLabel from './UsersOnlineLabel';\r\nimport RoomIdLabel from './RoomIdLabel';\r\nimport LeaveRoomButton from './LeaveRoomButton';\r\nimport MessageInput from './MessageInput';\r\nimport UsersTypingLabel from './UsersTypingLabel';\r\nimport MessageList from './MessageList';\r\n\r\nconst ChatDisplay = () => {\r\n  const history = useHistory();\r\n  const roomId = useSelector(state => state.user.roomId);\r\n  const [messagesEnd, setMessagesEnd] = useState(null);\r\n  const messages = useSelector(state => state.messages);\r\n\r\n  if (!roomId) {\r\n    history.push('/')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (messagesEnd) {\r\n      messagesEnd.scrollIntoView();\r\n    }\r\n  }, [messages, messagesEnd]);\r\n\r\n  return (\r\n    <div className='message-display mx-auto'>\r\n      <LeaveRoomButton />\r\n      <div className=\"p-3 mb-3 bg-white rounded box-shadow\">\r\n        <UsersOnlineLabel />\r\n\r\n        <div className='message-board'>\r\n          <MessageList messages={messages} />\r\n          <div ref={el => setMessagesEnd(el)}></div>\r\n        </div>\r\n\r\n        <UsersTypingLabel />\r\n        <MessageInput />\r\n      </div>\r\n      <RoomIdLabel />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatDisplay;","import React from 'react';\r\n\r\nconst TextInput = ({\r\n  value,\r\n  onChange,\r\n  placeholder = '',\r\n  prependText,\r\n  required = false\r\n}) => {\r\n\r\n  return (\r\n    <div className='react-input'>\r\n      <div className=\"input-group mb-3\">\r\n\r\n        { prependText &&\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">{prependText}</span>\r\n          </div>\r\n        }\r\n        \r\n        <input\r\n          value={value}\r\n          onChange={onChange}\r\n          className=\"form-control\"\r\n          placeholder={placeholder}\r\n          required={required}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;","import React, { useState } from 'react';\r\nimport socket from '../services/messages';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nimport TextInput from './TextInput';\r\n\r\nconst JoinRoomForm = ({ action /* 'CREATE_ROOM' tai 'JOIN_ROOM'*/}) => {\r\n  const roomIdFromURI = useParams().id;\r\n  const [username, setUsername] = useState('');\r\n  const [roomId, setRoomId] = useState(roomIdFromURI || '');\r\n\r\n  const handleSubmit = ev => {\r\n    ev.preventDefault();\r\n    \r\n    socket.emit(action, {\r\n      username,\r\n      roomId: roomId.trim()\r\n    });\r\n  };\r\n\r\n  const submitButtonData = () => {\r\n    let data = {\r\n      msg: '',\r\n      disabled: true\r\n    };\r\n\r\n    if (username.length < 3) {\r\n      data.msg = 'Enter atleast 3 letters';\r\n    } else {\r\n      data.msg = action === 'CREATE_ROOM'\r\n        ? 'Create room'\r\n        : 'Join room';\r\n\r\n      data.disabled = false;\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  const buttonType = action === 'CREATE_ROOM' ? 'success' : 'primary';\r\n\r\n  return (\r\n    <div>\r\n      <div className='header-background'>\r\n        <Link className='pl-3' to='/'>back</Link>\r\n\r\n        <div className='header'>\r\n          <h1>Enter a username</h1>\r\n        </div>\r\n      </div>\r\n      \r\n      <form className='text-center mt-3' onSubmit={handleSubmit}>\r\n        <TextInput\r\n          value={username}\r\n          onChange={({ target }) => setUsername(target.value)}\r\n          placeholder={'Username'}\r\n          prependText={'@'}\r\n          required={true}\r\n        />\r\n\r\n        { action === 'JOIN_ROOM' &&\r\n          <TextInput\r\n            value={roomId}\r\n            onChange={({ target }) => setRoomId(target.value)}\r\n            placeholder={'ID'}\r\n            prependText={'Room ID'}\r\n            required={true}\r\n          />\r\n        }\r\n\r\n        <button\r\n          type='submit'\r\n          disabled={submitButtonData().disabled}\r\n          className={`btn btn-${buttonType} btn-lg`}\r\n        >\r\n          { submitButtonData().msg }\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinRoomForm;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst StartScreen = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className='text-center'>\r\n      <div className='header-background'>\r\n        <div className='header'>\r\n          <h1>Simple chat</h1>\r\n          <p>Setup chat in seconds</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className='p-5'>\r\n        <Button variant='success' size='lg' onClick={() => history.push('/create')}>Create</Button>{' '}\r\n        <Button variant='primary' size='lg' onClick={() => history.push('/join')}>Join</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartScreen;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification);\r\n\r\n  if (!notification.message) return null;\r\n\r\n  return (\r\n    <div id='notification' className='p-3 box-shadow'>\r\n      <span>{ notification.message }</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import React, { useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport ChatDisplay from './components/ChatDisplay';\nimport JoinRoomForm from './components/JoinRoomForm';\nimport StartScreen from './components/StartScreen';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const history = useHistory();\n  const roomId = useSelector(state => state.user.roomId);\n\n  useEffect(() => {\n    if (roomId) history.push('/room/live');\n  }, [roomId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className='container' id='app'>\n      <Notification />\n      <Switch>\n        <Route path='/' component={StartScreen} exact={true} />\n\n        <Route path='/create' exact={true}>\n          <JoinRoomForm action='CREATE_ROOM' />\n        </Route>\n\n        <Route path={['/join/:id', '/join']} exact={true}>\n          <JoinRoomForm action='JOIN_ROOM' />\n        </Route>\n\n        <Route path='/room/live' component={ChatDisplay} exact={true} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store';\nimport './index.css';\n\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}